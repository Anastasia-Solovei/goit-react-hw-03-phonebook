{"version":3,"sources":["components/Section/Section.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["Section","title","children","className","ContactForm","state","filter","name","number","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onAdd","isValidatedForm","onCheckContact","id","reset","this","onSubmit","htmlFor","type","onChange","pattern","required","Component","filterInputId","Filter","ContactItem","onDeleteContact","onClick","ContactList","contacts","map","contact","App","handleAddContact","handleDeleteContact","prevState","handleCheckUniqueContact","isExistContact","find","alert","handleFilterChange","getFilteredContacts","normalizedFilter","toLowerCase","includes","localStorage","getItem","parsedContacts","JSON","parse","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.81314f39.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Section.scss';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className=\"Section\">\r\n      <h2 className=\"SectionTitle\">{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import { Component } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './ContactForm.scss';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = uuidv4();\r\n  numberInputId = uuidv4();\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd, onCheckContact } = this.props;\r\n\r\n    const isValidatedForm = onCheckContact({ name });\r\n\r\n    if (!isValidatedForm) {\r\n      return;\r\n    }\r\n\r\n    isValidatedForm && onAdd({ id: uuidv4(), name, number });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      filter: '',\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\r\n        <div className=\"InputOverlay\">\r\n          <label className=\"InputLabel\" htmlFor={this.nameInputId}>\r\n            Name\r\n          </label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            id={this.nameInputId}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"InputOverlay\">\r\n          <label className=\"InputLabel\" htmlFor={this.numberInputId}>\r\n            Number\r\n          </label>\r\n          <input\r\n            className=\"Input\"\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            id={this.numberInputId}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <button className=\"FormButton\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport './Filter.scss';\r\n\r\nconst filterInputId = uuidv4();\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <div className=\"InputOverlay\">\r\n      <label htmlFor={filterInputId} className=\"FilterLabel\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className=\"FilterInput\"\r\n        type=\"text\"\r\n        value={value}\r\n        onChange={onChange}\r\n        id={filterInputId}\r\n      ></input>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nimport './ContactItem.scss';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className=\"ContactItem\">\r\n      <p className=\"ContactItemText\">\r\n        {name}: {number}\r\n      </p>\r\n\r\n      <button\r\n        className=\"DeleteBtn\"\r\n        id={id}\r\n        type=\"button\"\r\n        onClick={onDeleteContact}\r\n      >\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from 'react';\r\n\r\nimport ContactItem from './ContactItem';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n  return (\r\n    <ul className=\"ContactList\">\r\n      {contacts &&\r\n        contacts.map(contact => {\r\n          return (\r\n            <ContactItem\r\n              key={contact.id}\r\n              id={contact.id}\r\n              name={contact.name}\r\n              number={contact.number}\r\n              onDeleteContact={onDeleteContact}\r\n            />\r\n          );\r\n        })}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\n\r\nimport Section from './components/Section';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleAddContact = ({ id, name, number }) => {\r\n    const contact = {\r\n      id,\r\n      name,\r\n      number,\r\n    };\r\n\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [contact, ...contacts],\r\n    }));\r\n  };\r\n\r\n  handleDeleteContact = e => {\r\n    const { id } = e.currentTarget;\r\n\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  handleCheckUniqueContact = ({ name }) => {\r\n    const { contacts } = this.state;\r\n\r\n    const isExistContact = !!contacts.find(contact => contact.name === name);\r\n\r\n    isExistContact && alert('Contact is already exist!');\r\n\r\n    return !isExistContact;\r\n  };\r\n\r\n  handleFilterChange = e => {\r\n    const { value } = e.currentTarget;\r\n\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { filter, contacts } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    const filteredContacts = contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n\r\n    return filteredContacts;\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contacts = localStorage.getItem('contacts');\r\n    const parsedContacts = JSON.parse(contacts);\r\n\r\n    if (parsedContacts) {\r\n      this.setState({ contacts: parsedContacts });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    if (this.state.contacts !== prevState.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <Section>\r\n          <ContactForm\r\n            onAdd={this.handleAddContact}\r\n            onCheckContact={this.handleCheckUniqueContact}\r\n          />\r\n        </Section>\r\n\r\n        <Section title={'Contacts'}>\r\n          <Filter value={filter} onChange={this.handleFilterChange} />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDeleteContact={this.handleDeleteContact}\r\n          />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport App from './App';\r\nimport './styles/base.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}